plugins {
    id 'java'
    id "io.freefair.lombok" version "6.5.1"
    id 'org.springframework.boot'
    id 'io.spring.dependency-management' version '1.0.14.RELEASE'
}

group 'stub'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {

    compileOnly project(":StubCommon")
    testCompileOnly project(":StubCommon")

    implementation 'org.springframework.kafka:spring-kafka'

    implementation "org.apache.commons:commons-lang3:3.0"

    implementation 'com.hazelcast:hazelcast-spring:5.1.3'
    //spring web
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    implementation 'io.micrometer:micrometer-registry-prometheus:1.11.4'
    implementation 'io.micrometer:micrometer-core:1.11.4'
    //spring rabbit-mq
    implementation 'org.springframework.boot:spring-boot-starter-amqp'
    testImplementation 'org.springframework.amqp:spring-rabbit-test'

    //configuration processor
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

    //theatre client
    implementation 'org.springframework:spring-webflux:6.0.2'

    implementation 'org.eclipse.jetty:jetty-reactive-httpclient:3.0.10'
    implementation "org.eclipse.jetty:jetty-http:$jettyVersion"
    implementation "org.eclipse.jetty:jetty-client:$jettyVersion"
    implementation "org.eclipse.jetty:jetty-util:$jettyVersion"
    implementation "org.eclipse.jetty:jetty-alpn-client:$jettyVersion"
    implementation "org.eclipse.jetty:jetty-io:$jettyVersion"

    // https://mvnrepository.com/artifact/org.testcontainers/junit-jupiter
    testImplementation("org.testcontainers:junit-jupiter:1.19.1")
    //jupiter
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.0'
    testImplementation "org.testcontainers:kafka:1.19.3"

    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.0'
}
configurations {
    runtimeClasspath {
        extendsFrom compileOnly
    }
    testRuntimeClasspath {
        extendsFrom compileOnly
    }
}
test {
    useJUnitPlatform()
}