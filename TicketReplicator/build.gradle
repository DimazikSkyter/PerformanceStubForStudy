plugins {
    id 'java'
}

group = 'ru.nspk.replicators'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {

    compileOnly project(":StubCommon")

    implementation 'org.apache.kafka:kafka-clients:3.5.1'
    implementation 'org.apache.kafka:connect-api:3.5.1' // Adjust version as needed
    implementation 'io.confluent:kafka-connect-jdbc:5.4.0' // Adjust version as needed
    implementation 'org.postgresql:postgresql:42.2.5' // Adjust version as needed

    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
}

// Define tasks for building and assembling the distribution
tasks.register('assembleConnector', Jar) {
    dependsOn jar
    from sourceSets.main.output
    from configurations.runtime

    // Add any additional resources needed for your connector
    // resources.srcDir 'src/main/resources'
}

// Define a task for building a distribution tarball (optional)
tasks.register('assembleDist', Tar) {
    dependsOn assembleConnector
    compression = Compression.GZIP
    baseName = 'your-connector'
    from 'build/distributions/'
    include 'your-connector.jar'
}

// Define a task for running your connector locally (optional)
tasks.register('runLocal', JavaExec) {
    dependsOn jar
    main = 'your.package.YourConnectorMainClass'
    classpath = sourceSets.main.runtimeClasspath
    // Add any additional configuration or system properties needed for your connector
    // systemProperty 'key', 'value'
}

// Define a task for running your connector in distributed mode (optional)
tasks.register('runDistributed', JavaExec) {
    dependsOn jar
    main = 'your.package.YourConnectorMainClass'
    classpath = sourceSets.main.runtimeClasspath
    // Add any additional configuration or system properties needed for your connector
    // systemProperty 'key', 'value'
}

// Customize the clean task if needed
clean {
    delete 'build'
}

test {
    useJUnitPlatform()
}